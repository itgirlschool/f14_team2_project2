@mixin round-corner($corner) {
    $corner-radius: 50px;

    @include media-max-width(md) {
        $corner-radius: 20px;
    }

    //the order of corners: lt rt rb lb
    //l-left, r- right, t-top,b-bottom
    $corners:(all:$corner-radius,
        lb_rb:0 0 $corner-radius $corner-radius,
        lt_rt:$corner-radius $corner-radius 0 0,
        lt_rb:$corner-radius 0,
        lb_rt:0 $corner-radius,
        lt_lb:$corner-radius 0 0 $corner-radius,
        rt_rb: 0 $corner-radius $corner-radius 0,
        0lt:0px $corner-radius $corner-radius,
        0rt:$corner-radius 0px $corner-radius $corner-radius,
        0lb: $corner-radius $corner-radius $corner-radius 0px,
        0rb:$corner-radius $corner-radius 0,
        lt:$corner-radius 0px 0px 0px,
        rt:0px $corner-radius 0px 0px,
        lb: 0px 0px 0px $corner-radius,
        rb:0px 0px $corner-radius 0px);

    @if map-has-key($corners, $corner) {


        $value: map-get($corners, $corner);

        border-radius: $value;
        overflow: hidden;


    }
}

@mixin media-max-width($breakpoint) {
    @if map-has-keys($grid-breakpoints, $breakpoint) {
        $value: map-get($grid-breakpoints, $breakpoint);
        $value: calc(#{$value} - 0.02px);

        @media (max-width:$value) {
            @content;
        }
    }
}

@mixin media-min-width($breakpoint) {
    @if map-has-keys($grid-breakpoints, $breakpoint) {
        $value: map-get($grid-breakpoints, $breakpoint);

        @media (min-width:$value) {
            @content;
        }
    }
}

@mixin media-between ($breakpoint1, $breakpoint2) {
    @if map-has-keys($grid-breakpoints, $breakpoint, $breakpoint2) {
        $value1: map-get($grid-breakpoints, $breakpoint1);
        $value2: map-get($grid-breakpoints, $breakpoint2);
        $value2: calc(#{$value2} - 0.02px);

        @media (min-width:$value1) and (max-width:$value2) {
            @content;
        }
    }
}